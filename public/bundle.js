!function(Q){var U={};function F(B){if(U[B])return U[B].exports;var c=U[B]={i:B,l:!1,exports:{}};return Q[B].call(c.exports,c,c.exports,F),c.l=!0,c.exports}F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var c in Q)F.d(B,c,function(U){return Q[U]}.bind(null,c));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="public",F(F.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/functions.ts\nconst getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n\n// CONCATENATED MODULE: ./src/classes/PokeStats.ts\n\r\n/**\r\n * All Pokemon Types.\r\n * Enum values follow PokeAPI type values.\r\n */\r\nvar PokeType;\r\n(function (PokeType) {\r\n    PokeType[PokeType["NORMAL"] = 1] = "NORMAL";\r\n    PokeType[PokeType["FIGHTING"] = 2] = "FIGHTING";\r\n    PokeType[PokeType["FLYING"] = 3] = "FLYING";\r\n    PokeType[PokeType["POISON"] = 4] = "POISON";\r\n    PokeType[PokeType["GROUND"] = 5] = "GROUND";\r\n    PokeType[PokeType["ROCK"] = 6] = "ROCK";\r\n    PokeType[PokeType["BUG"] = 7] = "BUG";\r\n    PokeType[PokeType["GHOST"] = 8] = "GHOST";\r\n    PokeType[PokeType["STEEL"] = 9] = "STEEL";\r\n    PokeType[PokeType["FIRE"] = 10] = "FIRE";\r\n    PokeType[PokeType["WATER"] = 11] = "WATER";\r\n    PokeType[PokeType["GRASS"] = 12] = "GRASS";\r\n    PokeType[PokeType["ELECTRIC"] = 13] = "ELECTRIC";\r\n    PokeType[PokeType["ICE"] = 14] = "ICE";\r\n    PokeType[PokeType["DRAGON"] = 15] = "DRAGON";\r\n    PokeType[PokeType["DARK"] = 16] = "DARK";\r\n    PokeType[PokeType["FAIRY"] = 17] = "FAIRY";\r\n})(PokeType || (PokeType = {}));\r\n/**\r\n * Represent Pokemon\'s Pokedex stats.\r\n */\r\nclass PokeStats_PokeStats {\r\n    constructor(pokeType, pokeNumber, height, weight, name, desc, genus, imgUrl, spriteUrl, pokeTypeUrl) {\r\n        this.pokeType = pokeType;\r\n        this.pokeNumber = pokeNumber;\r\n        this.height = height;\r\n        this.weight = weight;\r\n        this.name = name;\r\n        this.desc = desc;\r\n        this.genus = genus;\r\n        this.imgUrl = imgUrl;\r\n        this.spriteUrl = spriteUrl;\r\n        this.pokeTypeUrl = pokeTypeUrl;\r\n        // Threshold for available 3D images\r\n        this.THRESHOLD_3D_IMG = 640;\r\n        // DOM Reference to Pokedex entry fields\r\n        this.displayPokeNumber = document.getElementById("display-poke-number");\r\n        this.displayPokeName = document.getElementById("display-poke-name");\r\n        this.displayPokeHeight = document.getElementById("display-poke-height");\r\n        this.displayPokeWeight = document.getElementById("display-poke-weight");\r\n        this.displayPokeBattles = document.getElementById("display-poke-battles");\r\n        this.displayPokeDesc = document.getElementById("display-poke-desc");\r\n        this.displayPokeGenus = document.getElementById("display-poke-genus");\r\n        this.displayPokeSprite = document.getElementById("display-poke-sprite");\r\n        this.displayPokeImg = document.getElementById("display-poke-img");\r\n        // Poke Type\r\n        this.displayPokeTypeImg1 = document.getElementById("display-poke-type-img-1");\r\n        this.displayPokeTypeImg2 = document.getElementById("display-poke-type-img-2");\r\n        this.displayPokeType1 = document.getElementById("display-poke-type-1");\r\n        this.displayPokeType2 = document.getElementById("display-poke-type-2");\r\n        this.type01 = document.getElementById("type01");\r\n        this.type02 = document.getElementById("type02");\r\n    }\r\n    /**\r\n     * Populate the Pokedex entry with the correct information\r\n     * based on SearchParams.  PokeStats object instantiated based\r\n     * on SearchParams.\r\n     */\r\n    populate() {\r\n        this.displayPokeNumber.textContent = `# ${this.pokeNumber.toString()}`;\r\n        this.displayPokeName.textContent = this.name;\r\n        this.displayPokeHeight.textContent = `${this.height.toString()} ft`;\r\n        this.displayPokeWeight.textContent = `${this.weight.toString()} lbs`;\r\n        this.displayPokeBattles.textContent = getRandomInt(10).toString();\r\n        this.displayPokeDesc.textContent = this.desc;\r\n        this.displayPokeGenus.textContent = this.genus;\r\n        this.displayPokeImg.src = this.imgUrl;\r\n        this.displayPokeSprite.src = this.spriteUrl;\r\n        this.renderPokeType();\r\n        this.positionImage();\r\n    }\r\n    /**\r\n     * Render Pokemon\'s types by using DOM.\r\n     * A Pokemon necessarily has 1 or 2 types only.\r\n     */\r\n    renderPokeType() {\r\n        this.displayPokeType1.textContent = this.pokeType[0];\r\n        this.displayPokeTypeImg1.src = this.pokeTypeUrl[0];\r\n        if (this.pokeTypeUrl.length == 1) {\r\n            this.type02.style.display = "none";\r\n        }\r\n        else if (this.pokeTypeUrl.length == 2) {\r\n            this.type02.style.display = "block";\r\n            this.displayPokeType2.textContent = this.pokeType[1];\r\n            this.displayPokeTypeImg2.src = this.pokeTypeUrl[1];\r\n        }\r\n        else {\r\n            throw "Invalid pokeTypeUrl array length in PokeStats";\r\n        }\r\n    }\r\n    positionImage() {\r\n        if (this.pokeNumber > this.THRESHOLD_3D_IMG) {\r\n            this.displayPokeImg.style.paddingTop = \'12vh\';\r\n            this.displayPokeImg.style.paddingLeft = \'5vh\';\r\n        }\r\n        else {\r\n            this.displayPokeImg.style.paddingTop = \'0\';\r\n            this.displayPokeImg.style.paddingLeft = \'5vh\';\r\n        }\r\n    }\r\n    /**\r\n   * Display stats in PokeStats object.\r\n   * For debugging purposes.\r\n   */\r\n    format() {\r\n        return `Name: ${this.name}\r\n\t\tType: ${this.pokeType[0]} / and more\r\n\t\tNo. ${this.pokeNumber}\r\n\t\tHeight: ${this.height}\r\n\t\tWeight: ${this.weight}\r\n\t\tDesc: ${this.desc}\r\n\t\timg url: ${this.imgUrl}\r\n\t\tSprite url: ${this.spriteUrl}\r\n\t\tPoketype url: ${this.pokeTypeUrl[0]} / and more\r\n\t\t`;\r\n    }\r\n}\r\n\n// CONCATENATED MODULE: ./src/classes/SearchParam.ts\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\nvar SearchOption;\r\n(function (SearchOption) {\r\n    SearchOption[SearchOption["NAME"] = 0] = "NAME";\r\n    SearchOption[SearchOption["COLOUR"] = 1] = "COLOUR";\r\n})(SearchOption || (SearchOption = {}));\r\n/**\r\n * Represent user keyword search term and SearchOption.\r\n * Methods perform search requests pursuant to search paramters.\r\n */\r\nclass SearchParam_SearchParam {\r\n    constructor(keyword, option) {\r\n        this.keyword = keyword;\r\n        this.option = option;\r\n        // Divide decimetre by this value to get feet\r\n        this.DECIMETRE_TO_FT = 3.048;\r\n        // Divide hectogram by this value to get pounds\r\n        this.HECTOGRAM_TO_LB = 4.536;\r\n        // Threshold for available 3D images\r\n        this.THRESHOLD_3D_IMG = 640;\r\n        this.NAME_URL = "https://pokeapi.co/api/v2/pokemon/";\r\n        this.COLOUR_URL = "https://pokeapi.co/api/v2/pokemon-color/";\r\n        this.SPECIES_URL = "https://pokeapi.co/api/v2/pokemon-species/";\r\n        this.errorMsg = document.getElementById(\'poke-search-err\');\r\n    }\r\n    /**\r\n     * Return a PokeStats object based on data retrieved through PokeAPI\r\n     * for the purpose of filling a Pokedex entry.\r\n     */\r\n    getStats() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let data = yield this.getData();\r\n            if (Array.isArray(data) && !data.length)\r\n                return;\r\n            let pokemonData = data[0];\r\n            let imgUrl = data[1];\r\n            let speciesData = data[2];\r\n            // ATTRIBUTES\r\n            let pokeType = [];\r\n            let { id, height, weight, name } = pokemonData;\r\n            height = Math.round(height / this.DECIMETRE_TO_FT * 10) / 10;\r\n            weight = Math.round((weight / this.HECTOGRAM_TO_LB) * 10) / 10;\r\n            let desc = "placeholder desc";\r\n            let genus = "placeholder genus";\r\n            let spriteUrl = pokemonData.sprites.front_default;\r\n            let pokeTypeUrl = [];\r\n            /* Check if id is larger than 640.  If it is, return spriteUrl as imgUrl.\r\n                 3D Rendered images only available for Pokemon No. 1 - 640. */\r\n            if (id > this.THRESHOLD_3D_IMG)\r\n                imgUrl = spriteUrl;\r\n            //TYPE\r\n            for (let pType of pokemonData.types) {\r\n                pokeType.push(pType.type.name);\r\n            }\r\n            //DESC\r\n            desc = speciesData.flavor_text_entries[0].flavor_text;\r\n            genus = speciesData.genera[7].genus;\r\n            pokeType.forEach(pType => {\r\n                pokeTypeUrl.push(`./public/img/${pType}.png`);\r\n            });\r\n            return new PokeStats_PokeStats(pokeType, id, height, weight, name, desc, genus, imgUrl, spriteUrl, pokeTypeUrl);\r\n        });\r\n    }\r\n    /**\r\n     * Asynchronously retrieve three pieces of Pokemon data.\r\n     * 0. Pokemon Data (general stats such as height, weight)\r\n     * 1. 3D Render Image Url\r\n     * 2. Species Data (Pokemon description and genus)\r\n     */\r\n    getData() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.errorMsg.style.visibility = \'hidden\';\r\n            const pokemonData = $.get(`${this.NAME_URL}${this.keyword}`).fail((e) => {\r\n                this.renderErrorMsg();\r\n            });\r\n            const imgUrl = this.getImgUrl();\r\n            const speciesData = $.get(`${this.SPECIES_URL}${this.keyword}`).fail((e) => {\r\n                this.renderErrorMsg();\r\n            });\r\n            ;\r\n            try {\r\n                const allData = yield Promise.all([pokemonData, imgUrl, speciesData]);\r\n                return allData;\r\n            }\r\n            catch (err) {\r\n                console.error(`Cannot retrieve PokeAPI data for ${this.keyword}: getData() in SearchParam`, err);\r\n            }\r\n            return [];\r\n        });\r\n    }\r\n    /**\r\n     * Get 3D Render Image URL for Pokemon.\r\n     */\r\n    getImgUrl() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let data = yield this.getId();\r\n            let num = typeof (data) === \'number\' ? data : data.id;\r\n            return `https://raw.githubusercontent.com/ZeChrales/PogoAssets/master/pokemon_icons/pokemon_icon_${this.getUrlSnippet(num)}_00.png`;\r\n        });\r\n    }\r\n    renderErrorMsg() {\r\n        this.errorMsg.style.visibility = \'visible\';\r\n        this.errorMsg.textContent = `Pokemon ${this.keyword.toUpperCase()} does not exist. Please try again.`;\r\n    }\r\n    /**\r\n     * Get Pokemon No. based on search keyword.\r\n     */\r\n    getId() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.isNumeric(this.keyword)) {\r\n                return parseInt(this.keyword);\r\n            }\r\n            return yield $.get(`${this.NAME_URL}${this.keyword}`);\r\n        });\r\n    }\r\n    /**\r\n     * Get ID url snippet to retrieve correct image.\r\n     * 1 -> 001\r\n     * 13 -> 013\r\n     * 123 -> 123\r\n     * @param id as integer\r\n     */\r\n    getUrlSnippet(id) {\r\n        let snippet;\r\n        if (id < 10) {\r\n            snippet = `00${id.toString()}`;\r\n        }\r\n        else if (id < 100) {\r\n            snippet = `0${id.toString()}`;\r\n        }\r\n        else if (id >= 100) {\r\n            snippet = `${id.toString()}`;\r\n        }\r\n        else {\r\n            throw "id passed to getUrlSnippet() is NaN";\r\n        }\r\n        return snippet;\r\n    }\r\n    /**\r\n     * Helper method to check if keyword is numeric.\r\n     * @param value as string\r\n     */\r\n    isNumeric(value) {\r\n        return /^-{0,1}\\d+$/.test(value);\r\n    }\r\n}\r\n\n// CONCATENATED MODULE: ./src/index.ts\n\r\nconst src_form = document.getElementById("poke-search");\r\nconst keyword = document.getElementById("keyword");\r\nconst searchOption = document.getElementById("search-option");\r\nif (src_form) {\r\n    src_form.addEventListener("submit", (e) => {\r\n        e.preventDefault();\r\n        let option = parseInt(searchOption.value);\r\n        let values;\r\n        values = [keyword.value.toLowerCase(), option];\r\n        const searchParams = new SearchParam_SearchParam(...values);\r\n        keyword.value = \'\';\r\n        searchParams.getStats().then(pokeStats => {\r\n            if (pokeStats)\r\n                pokeStats.populate();\r\n        });\r\n    });\r\n}\r\n/******\r\n *  Materialise component initialisation\r\n *****/\r\n$(() => {\r\n    $(".sidenav").sidenav();\r\n    $("select").formSelect();\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);